name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y yasm libudev-dev libusb-1.0-0-dev

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Determine files to upload
        if: github.ref == 'refs/heads/master' # always publish for just the master branch
        id: filenames
        shell: bash
        run: |
          HASH=$(git rev-parse --short HEAD)
          COUNT=$(git rev-list --count HEAD)

          if [ "$RUNNER_OS" == "Windows" ]; then
            echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.exe"
            echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.exe"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.dmg"
            echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.dmg"
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.tar.gz"
            echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.tar.gz"
          else
            echo "$RUNNER_OS not supported"
            exit 0
          fi

      - name: Upload app
        if: ${{ steps.filenames.outputs.sourcename }}
        uses: ./.github/actions/s3-upload
        with:
          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          host: ${{ secrets.S3_HOST }}
          bucket: ${{ secrets.S3_BUCKET }}
          access-key: ${{ secrets.S3_KEY }}
          secret-key: ${{ secrets.S3_SECRET }}
