name: Build/release

on: push

jobs:
  Linux-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y yasm libudev-dev libusb-1.0-0-dev

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Run build
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn
          yarn dist

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          HASH=$(git rev-parse --short HEAD)
          COUNT=$(git rev-list --count HEAD)
          VERSION=$(node -e "console.log(require('./package.json').version)")

          echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.tar.gz"
          echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.tar.gz"
          echo ::set-output name=longversion::"${VERSION}+${COUNT}-${HASH}"

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: master

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion-satellite
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion-satellite
          api-target: 'linux-tgz'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}

  Windows-x64:
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Run build
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn
          yarn dist

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          HASH=$(git rev-parse --short HEAD)
          COUNT=$(git rev-list --count HEAD)
          VERSION=$(node -e "console.log(require('./package.json').version)")

          echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.exe"
          echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.exe"
          echo ::set-output name=longversion::"${VERSION}+${COUNT}-${HASH}"

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: master

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion-satellite
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion-satellite
          api-target: 'win-x64'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}

  Mac-x64:
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Run build
        run: |
          # try and avoid timeout errors
          yarn config set network-timeout 100000 -g

          yarn
          yarn dist
        env:
          CSC_LINK: ${{ secrets.OSX_CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.OSX_CSC_KEY_PASSWORD }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}

      - name: Determine files to upload
        id: filenames
        shell: bash
        run: |
          HASH=$(git rev-parse --short HEAD)
          COUNT=$(git rev-list --count HEAD)
          VERSION=$(node -e "console.log(require('./package.json').version)")

          echo ::set-output name=sourcename::"electron-output/companion-satellite-x64.dmg"
          echo ::set-output name=targetname::"companion-satellite-x64-${COUNT}-${HASH}.dmg"
          echo ::set-output name=longversion::"${VERSION}+${COUNT}-${HASH}"

      - name: Upload build
        uses: bitfocus/actions/upload-and-notify@main
        with:
          long-version: ${{ steps.filenames.outputs.longversion }}
          beta-branch: master

          source-filename: ${{ steps.filenames.outputs.sourcename }}
          destination-filename: ${{ steps.filenames.outputs.targetname }}
          s3-host: ${{ secrets.S3_HOST }}
          s3-bucket: ${{ secrets.S3_BUCKET }}/companion-satellite
          s3-access-key: ${{ secrets.S3_KEY }}
          s3-secret-key: ${{ secrets.S3_SECRET }}

          api-product: companion-satellite
          api-target: 'mac-intel'
          api-secret: ${{ secrets.BITFOCUS_API_PROJECT_SECRET }}
